Lexeme: compute_expr2	 Line no: 1         		Token: ID        	Value: -----		Parent Node: module    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: program		Leaf Node: No		Node Symbol: module

Lexeme: x         	 Line no: 2         		Token: ID        	Value: -----		Parent Node: inputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: inputplist

Lexeme: integer   	 Line no: 2         		Token: INTEGER   	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: inputplist		Leaf Node: No		Node Symbol: datatype

Lexeme: y         	 Line no: 3         		Token: ID        	Value: -----		Parent Node: outputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: outputplist

Lexeme: integer   	 Line no: 3         		Token: INTEGER   	Value: -----		Parent Node: type      		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: outputplist		Leaf Node: No		Node Symbol: type

Lexeme: y         	 Line no: 6         		Token: ID        	Value: -----		Parent Node: assignmentstmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: assignmentstmt

Lexeme: 15        		Line no: 6         		Token: NUM       		Value: 15        		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: whichstmt		Leaf Node: No		Node Symbol: expression

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: moduledef		Leaf Node: No		Node Symbol: statements

Lexeme: print     	 Line no: 7         		Token: PRINT     	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: iostmt

Lexeme: x         	 Line no: 7         		Token: ID        	Value: -----		Parent Node: var       		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: iostmt		Leaf Node: No		Node Symbol: var

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: moduledef

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: ROOT		Leaf Node: No		Node Symbol: program

Lexeme: compute_expr	 Line no: 12        		Token: ID        	Value: -----		Parent Node: module    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: program		Leaf Node: No		Node Symbol: module

Lexeme: x         	 Line no: 13        		Token: ID        	Value: -----		Parent Node: inputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: inputplist

Lexeme: integer   	 Line no: 13        		Token: INTEGER   	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: inputplist		Leaf Node: No		Node Symbol: datatype

Lexeme: y         	 Line no: 13        		Token: ID        	Value: -----		Parent Node: inputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: integer   	 Line no: 13        		Token: INTEGER   	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: inputplist		Leaf Node: No		Node Symbol: datatype

Lexeme: A         	 Line no: 13        		Token: ID        	Value: -----		Parent Node: inputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: array     	 Line no: 13        		Token: ARRAY     	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: inputplist		Leaf Node: No		Node Symbol: datatype

Lexeme: 2         		Line no: 13        		Token: NUM       		Value: 2         		Parent Node: rangearrays		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: datatype		Leaf Node: No		Node Symbol: rangearrays

Lexeme: 5         		Line no: 13        		Token: NUM       		Value: 5         		Parent Node: rangearrays		Leaf Node: Yes		Node Symbol: -----

Lexeme: integer   	 Line no: 13        		Token: INTEGER   	Value: -----		Parent Node: type      		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: datatype		Leaf Node: No		Node Symbol: type

Lexeme: u         	 Line no: 14        		Token: ID        	Value: -----		Parent Node: outputplist		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: outputplist

Lexeme: integer   	 Line no: 14        		Token: INTEGER   	Value: -----		Parent Node: type      		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: outputplist		Leaf Node: No		Node Symbol: type

Lexeme: u         	 Line no: 18        		Token: ID        	Value: -----		Parent Node: assignmentstmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: assignmentstmt

Lexeme: A         	 Line no: 18        		Token: ID        	Value: -----		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: whichstmt		Leaf Node: No		Node Symbol: expression

Lexeme: 3         		Line no: 18        		Token: NUM       		Value: 3         		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: moduledef		Leaf Node: No		Node Symbol: statements

Lexeme: A         	 Line no: 19        		Token: ID        	Value: -----		Parent Node: assignmentstmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: assignmentstmt

Lexeme: 3         		Line no: 19        		Token: NUM       		Value: 3         		Parent Node: whichstmt 		Leaf Node: Yes		Node Symbol: -----

Lexeme: x         	 Line no: 19        		Token: ID        	Value: -----		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: whichstmt		Leaf Node: No		Node Symbol: expression

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: print     	 Line no: 20        		Token: PRINT     	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: iostmt

Lexeme: A         	 Line no: 20        		Token: ID        	Value: -----		Parent Node: var       		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: iostmt		Leaf Node: No		Node Symbol: var

Lexeme: print     	 Line no: 21        		Token: PRINT     	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: iostmt

Lexeme: y         	 Line no: 21        		Token: ID        	Value: -----		Parent Node: var       		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: iostmt		Leaf Node: No		Node Symbol: var

Lexeme: u         	 Line no: 22        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: modulereusestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: modulereusestmt

Lexeme: compute_expr2	 Line no: 22        		Token: ID        	Value: -----		Parent Node: modulereusestmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: u         	 Line no: 22        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: modulereusestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: module		Leaf Node: No		Node Symbol: moduledef

Lexeme: A         	 Line no: 28        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: declarestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: declarestmt

Lexeme: array     	 Line no: 28        		Token: ARRAY     	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: declarestmt		Leaf Node: No		Node Symbol: datatype

Lexeme: 2         		Line no: 28        		Token: NUM       		Value: 2         		Parent Node: rangearrays		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: datatype		Leaf Node: No		Node Symbol: rangearrays

Lexeme: 5         		Line no: 28        		Token: NUM       		Value: 5         		Parent Node: rangearrays		Leaf Node: Yes		Node Symbol: -----

Lexeme: integer   	 Line no: 28        		Token: INTEGER   	Value: -----		Parent Node: type      		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: datatype		Leaf Node: No		Node Symbol: type

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: moduledef		Leaf Node: No		Node Symbol: statements

Lexeme: z         	 Line no: 29        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: declarestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: a         	 Line no: 29        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: b         	 Line no: 29        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: declarestmt

Lexeme: integer   	 Line no: 29        		Token: INTEGER   	Value: -----		Parent Node: datatype  		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: declarestmt		Leaf Node: No		Node Symbol: datatype

Lexeme: get_value 	 Line no: 30        		Token: GET_VALUE 	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: iostmt

Lexeme: A         	 Line no: 30        		Token: ID        	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: a         	 Line no: 31        		Token: ID        	Value: -----		Parent Node: assignmentstmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: assignmentstmt

Lexeme: 8         		Line no: 31        		Token: NUM       		Value: 8         		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: whichstmt		Leaf Node: No		Node Symbol: expression

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: b         	 Line no: 32        		Token: ID        	Value: -----		Parent Node: assignmentstmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: assignmentstmt

Lexeme: 9         		Line no: 32        		Token: NUM       		Value: 9         		Parent Node: expression		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: whichstmt		Leaf Node: No		Node Symbol: expression

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: z         	 Line no: 33        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: modulereusestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: simplestmt		Leaf Node: No		Node Symbol: modulereusestmt

Lexeme: compute_expr	 Line no: 33        		Token: ID        	Value: -----		Parent Node: modulereusestmt		Leaf Node: Yes		Node Symbol: -----

Lexeme: a         	 Line no: 33        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: modulereusestmt		Leaf Node: No		Node Symbol: idlist

Lexeme: b         	 Line no: 33        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: A         	 Line no: 33        		Token: ID        	Value: -----		Parent Node: idlist    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: simplestmt

Lexeme: print     	 Line no: 34        		Token: PRINT     	Value: -----		Parent Node: iostmt    		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: statements		Leaf Node: No		Node Symbol: iostmt

Lexeme: z         	 Line no: 34        		Token: ID        	Value: -----		Parent Node: var       		Leaf Node: Yes		Node Symbol: -----

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: iostmt		Leaf Node: No		Node Symbol: var

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: drivermodule		Leaf Node: No		Node Symbol: moduledef

Lexeme: -----		Line no: -----		Token: -----		Value: -----		Parent Node: program		Leaf Node: No		Node Symbol: drivermodule

