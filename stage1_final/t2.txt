** This is a small code for verifying syntactic correctness of an empty driver and an empty module **
<<<driver program>>>
start

	declare i:integer;
	declare k:integer;
	**i:=1;**
	while(i<=k)
	start
		 i:=i+1;
		** the semantics of while needs an increment and will be taken care of at the second phase**
	end

	
end
<<module empty>>
takes input[a:boolean];
start

end

** print the following message on the console
      " Input source code is syntactically correct.........."
**

** Also print the parse tree in the format given in function description of printParseTree().[refer interface details]**

** The inorder traversal for an n‐ary tree can be seen as follows

Leftmost child ‐‐> parent node‐‐> remaining siblings (excluding the leftmost)**

** The above tree construction needs to be verified with manually created tree on paper for the above input using the given grammar. You can try using a A3 sized paper and draw the parse tree. work out the inorder traversal and verify your parser output **
